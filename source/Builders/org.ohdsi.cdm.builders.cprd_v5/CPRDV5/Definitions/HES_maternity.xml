<QueryDefinition>
   <Query>
     WITH nullFields as
     (
     select 'delmeth' as fieldName, 1 as isNullField
     union
     select 'delonset'as fieldName, 1 as isNullField
     union
     select 'delinten'as fieldName, 1 as isNullField
     union
     select 'delchang'as fieldName, 1 as isNullField
     union
     select 'delpren'as fieldName, 1 as isNullField
     union
     select 'delposn'as fieldName, 1 as isNullField
     union
     select 'anagest'as fieldName, 1 as isNullField
     union
     select 'matage'as fieldName, 1 as isNullField
     union
     select 'neodur'as fieldName, 1 as isNullField
     union
     select 'antedur'as fieldName, 1 as isNullField
     union
     select 'postdur'as fieldName, 1 as isNullField
     union
     select 'intdays'as fieldName, 1 as isNullField
     union
     select 'acpspef'as fieldName, 1 as isNullField
     union
     select 'elecdate'as fieldName, 1 as isNullField
     union
     select 'elecdur'as fieldName, 1 as isNullField
     ),
     maternityLookup as
     (
     select a.id, a.fieldname, '3-'+cast(row_number() OVER(Order By a.fieldname) as varchar(256)) as observation_source_value, b.fieldid
     from
     (
     select 'numbaby' id ,'numbaby' fieldname union
     select 'anagest' id ,'anagest' fieldname union
     select 'anasdate' id ,'anasdate' fieldname union
     select 'antedur' id ,'antedur' fieldname union
     select 'biresus' id ,'biresus' fieldname union
     select 'birordr' id ,'birorder' fieldname union
     select 'birstat' id ,'birstat' fieldname union
     select 'birweit' id ,'birweit' fieldname union
     select 'delchang' id ,'delchang' fieldname union
     select 'delinten' id ,'delinten' fieldname union
     select 'delmeth' id ,'delmeth' fieldname union
     select 'delonset' id ,'delonset' fieldname union
     select 'delplac' id ,'delplace' fieldname union
     select 'delposan' id ,'delposn' fieldname union
     select 'delprean' id ,'delpren' fieldname union
     select 'delstat' id ,'delstat' fieldname union
     select 'gestat' id ,'gestat' fieldname union
     select 'matage' id ,'matage' fieldname union
     select 'matordr' id ,'babyseq' fieldname union
     select 'neocare' id ,'neocare' fieldname union
     select 'neodur' id ,'neodur' fieldname union
     select 'numbaby' id ,'numbaby' fieldname union
     select 'numpreg' id ,'numpreg' fieldname union
     select 'postdur' id ,'postdur' fieldname union
     select 'sexbaby' id ,'sexbaby' fieldname union
     select 'wellbaby' id ,'well_baby_ind' fieldname
     ) as a
     left join {sc}.hes_fielddefinitions b on a.fieldname = b.fieldname and b.class = 'maternity'
     ),
     mappings as
     (
     SELECT distinct
     FieldId,
     REPLACE(Value, '0', '') Value,
     Description
     FROM {sc}.hes_fieldmappings
     where Value like '0%' and len(Value) = 2
     union
     SELECT DISTINCT
     FieldId,
     Value,
     Description
     FROM {sc}.hes_fieldmappings
     ),
     maternity as
     (
     SELECT
     patid,
     spno,
     epistart,
     ISNULL(CAST(anagest AS nvarchar(50)), '9999999') anagest,
     ISNULL(CAST(anasdate AS nvarchar(50)), '9999999') anasdate,
     ISNULL(CAST(antedur AS nvarchar(50)), '9999999') antedur,
     ISNULL(CAST(matordr AS nvarchar(50)), '9999999') matordr,
     ISNULL(CAST(biresus AS nvarchar(50)), '9999999') biresus,
     ISNULL(CAST(birordr AS nvarchar(50)), '9999999') birordr,
     ISNULL(CAST(birstat AS nvarchar(50)), '9999999') birstat,
     ISNULL(CAST(birweit AS nvarchar(50)), '9999999') birweit,
     ISNULL(CAST(delchang AS nvarchar(50)), '9999999') delchang,
     ISNULL(CAST(delinten AS nvarchar(50)), '9999999') delinten,
     ISNULL(CAST(delmeth AS nvarchar(50)), '9999999') delmeth,
     ISNULL(CAST(delonset AS nvarchar(50)), '9999999') delonset,
     ISNULL(CAST(delplac AS nvarchar(50)), '9999999') delplac,
     ISNULL(CAST(delposan AS nvarchar(50)), '9999999') delposan,
     ISNULL(CAST(delprean AS nvarchar(50)), '9999999') delprean,
     ISNULL(CAST(delstat AS nvarchar(50)), '9999999') delstat,
     ISNULL(CAST(gestat AS nvarchar(50)), '9999999') gestat,
     ISNULL(CAST(matage AS nvarchar(50)), '9999999') matage,
     ISNULL(CAST(neocare AS nvarchar(50)), '9999999') neocare,
     ISNULL(CAST(neodur AS nvarchar(50)), '9999999') neodur,
     ISNULL(CAST(numbaby AS nvarchar(50)), '9999999') numbaby,
     ISNULL(CAST(numpreg AS nvarchar(50)), '9999999') numpreg,
     ISNULL(CAST(postdur AS nvarchar(50)), '9999999') postdur,
     ISNULL(CAST(sexbaby AS nvarchar(50)), '9999999') sexbaby,
     ISNULL(CAST(wellbaby AS nvarchar(50)), '9999999') wellbaby
     FROM {sc}.HES_maternity
     JOIN {sc}._chunks ch ON ch.ChunkId = {0} AND patid = ch.PERSON_ID
     WHERE epistart IS NOT NULL
     AND ((numbaby = '1' AND matordr  = 1) OR
     (numbaby = '2' AND matordr &lt;= 2) OR
     (numbaby = '3' AND matordr &lt;= 3) OR
     (numbaby = '4' AND matordr &lt;= 4) OR
     (numbaby = '5' AND matordr &lt;= 5) OR
     (numbaby = '6' AND matordr &lt;= 6) OR
     (numbaby = '7' AND matordr &lt;= 7) OR
     (numbaby = '8' AND matordr &lt;= 8) OR
     ((numbaby = '9' OR numbaby = 'X') AND matordr = 1))
     ),
     maternity_unp as
     (
     SELECT patid, spno, epistart, 'anagest' as fieldname,  anagest as var_code from maternity union
     SELECT patid, spno, epistart, 'anasdate' as fieldname, anasdate as var_code from maternity union
     SELECT patid, spno, epistart, 'antedur' as fieldname,  antedur as var_code from maternity union
     SELECT patid, spno, epistart, 'matordr' as fieldname,  matordr as var_code from maternity union
     SELECT patid, spno, epistart, 'biresus' as fieldname,  biresus as var_code from maternity union
     SELECT patid, spno, epistart, 'birordr' as fieldname,  birordr as var_code from maternity union
     SELECT patid, spno, epistart, 'birstat' as fieldname,  birstat as var_code from maternity union
     SELECT patid, spno, epistart, 'birweit' as fieldname,  birweit as var_code from maternity union
     SELECT patid, spno, epistart, 'delchang' as fieldname, delchang as var_code from maternity union
     SELECT patid, spno, epistart, 'delinten' as fieldname, delinten as var_code from maternity union
     SELECT patid, spno, epistart, 'delmeth' as fieldname,  delmeth as var_code from maternity union
     SELECT patid, spno, epistart, 'delonset' as fieldname, delonset as var_code from maternity union
     SELECT patid, spno, epistart, 'delplac' as fieldname,  delplac as var_code from maternity union
     SELECT patid, spno, epistart, 'delposan' as fieldname, delposan as var_code from maternity union
     SELECT patid, spno, epistart, 'delprean' as fieldname, delprean as var_code from maternity union
     SELECT patid, spno, epistart, 'delstat' as fieldname,  delstat as var_code from maternity union
     SELECT patid, spno, epistart, 'gestat' as fieldname,  gestat as var_code from maternity union
     SELECT patid, spno, epistart, 'matage' as fieldname,  matage as var_code from maternity union
     SELECT patid, spno, epistart, 'neocare' as fieldname,  neocare as var_code from maternity union
     SELECT patid, spno, epistart, 'neodur' as fieldname,  neodur as var_code from maternity union
     SELECT patid, spno, epistart, 'numbaby' as fieldname,  numbaby as var_code from maternity union
     SELECT patid, spno, epistart, 'numpreg' as fieldname,  numpreg as var_code from maternity union
     SELECT patid, spno, epistart, 'postdur' as fieldname,  postdur as var_code from maternity union
     SELECT patid, spno, epistart, 'sexbaby' as fieldname,  sexbaby as var_code from maternity union
     SELECT patid, spno, epistart, 'wellbaby' as fieldname, wellbaby as var_code from maternity
     )


     select
     patid,
     spno,
     epistart,
     l.observation_source_value,
     900000007 as observation_type_concept_id,
     CASE
     WHEN description IS NOT NULL THEN description
     WHEN description IS NULL AND var_code IS NOT NULL THEN var_code
     ELSE NULL
     END AS value_as_string
     from maternity_unp
     JOIN maternityLookup l ON l.id = maternity_unp.fieldname
     LEFT JOIN nullFields n ON l.fieldname = n.fieldname
     LEFT JOIN mappings m ON l.fieldid = m.fieldid AND ((var_code = '9999999' AND m.value = 'null')  OR (var_code = m.value))
     WHERE var_code != '' AND (var_code != '9999999' OR (isNullField = 1 AND var_code = '9999999'))
     order by patid
   </Query>
  <Measurement>
    <MeasurementDefinition>
      <PersonId>patid</PersonId>
      <StartDate>epistart</StartDate>
      <VisitOccurrenceId>spno</VisitOccurrenceId>
      <!--<ValueAsNumber>value_as_number</ValueAsNumber>-->
      <ValueSourceValue>value_as_string</ValueSourceValue>
      <AdditionalFields>
        <string>value_as_string</string>
      </AdditionalFields>
      <Concepts>
        <Concept>
          <IdRequired>true</IdRequired>
          <ConceptIdMappers>
            <Mapper>
              <Lookup>CPRDV5\Lookups\MeasurementLOINC.sql</Lookup>
            </Mapper>
          </ConceptIdMappers>
          <Fields>
            <Field key="observation_source_value" typeId="observation_type_concept_id"/>
          </Fields>
        </Concept>
      </Concepts>
    </MeasurementDefinition>
  </Measurement>
  <Observation>
    <ObservationDefinition>
      <PersonId>patid</PersonId>
      <StartDate>epistart</StartDate>
      <VisitOccurrenceId>spno</VisitOccurrenceId>
      <ValuesAsString>
        <string>value_as_string</string>
      </ValuesAsString>
      <!--<ValuesAsNumber>
        <string>value_as_number</string>
      </ValuesAsNumber>-->
      <AdditionalFields>
        <string>value_as_string</string>
      </AdditionalFields>
      <Concepts>
        <Concept>
          <ConceptIdMappers>
            <Mapper>
              <Lookup>CPRDV5\Lookups\HES_Observation.sql</Lookup>
            </Mapper>
          </ConceptIdMappers>
          <Fields>
            <Field key="observation_source_value" typeId="observation_type_concept_id"  isNullable="true"/>
          </Fields>
        </Concept>
      </Concepts>
    </ObservationDefinition>
  </Observation>
</QueryDefinition>