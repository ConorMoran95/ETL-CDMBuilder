<QueryDefinition>
   <Query>
     WITH nullFields as
     (
     select 'delmeth' as fieldName, 1 as isNullField
     union
     select 'delonset'as fieldName, 1 as isNullField
     union
     select 'delinten'as fieldName, 1 as isNullField
     union
     select 'delchang'as fieldName, 1 as isNullField
     union
     select 'delpren'as fieldName, 1 as isNullField
     union
     select 'delposn'as fieldName, 1 as isNullField
     union
     select 'anagest'as fieldName, 1 as isNullField
     union
     select 'matage'as fieldName, 1 as isNullField
     union
     select 'neodur'as fieldName, 1 as isNullField
     union
     select 'antedur'as fieldName, 1 as isNullField
     union
     select 'postdur'as fieldName, 1 as isNullField
     union
     select 'intdays'as fieldName, 1 as isNullField
     union
     select 'acpspef'as fieldName, 1 as isNullField
     union
     select 'elecdate'as fieldName, 1 as isNullField
     union
     select 'elecdur'as fieldName, 1 as isNullField
     ),
     acpLookup as
     (
     select a.id, a.fieldname, '1-'+cast(row_number() OVER(Order By a.fieldname) as varchar(256)) as observation_source_value, b.fieldid
     from
     (
     select 'acpdur' id ,'acpdur' fieldname union
     select 'intdays' id ,'intdays' fieldname union
     select 'depdays' id ,'depdays' fieldname union
     select 'acploc' id ,'acploc' fieldname union
     select 'acpsour' id ,'acpsour' fieldname union
     select 'acpdisp' id ,'acpdisp' fieldname union
     select 'acpout' id ,'acpout' fieldname union
     select 'acpplan' id ,'acpplan' fieldname union
     select 'acpspef' id ,'acpspef' fieldname union
     select 'orgsup' id ,'orgsup' fieldname
     ) as a
     left join {sc}.hes_fielddefinitions b on a.fieldname = b.fieldname and b.class = 'Augmented/critical care period'
     ),
     mappings as
     (
     SELECT distinct
     FieldId,
     REPLACE(Value, '0', '') Value,
     Description
     FROM {sc}.hes_fieldmappings
     where Value like '0%' and len(Value) = 2
     union
     SELECT DISTINCT
     FieldId,
     Value,
     Description
     FROM {sc}.hes_fieldmappings
     ),
     hesacp as
     (
     SELECT
     patid,
     spno,
     acpstar,
     ISNULL(CAST(acpdisp AS nvarchar(50)), '9999999') acpdisp,
     ISNULL(CAST(acpdur AS nvarchar(50)), '9999999') acpdur,
     ISNULL(CAST(acploc AS nvarchar(50)), '9999999') acploc,
     ISNULL(CAST(acpout AS nvarchar(50)), '9999999') acpout,
     ISNULL(CAST(acpplan AS nvarchar(50)), '9999999') acpplan,
     ISNULL(CAST(acpsour AS nvarchar(50)), '9999999') acpsour,
     ISNULL(CAST(acpspef AS nvarchar(50)), '9999999') acpspef,
     ISNULL(CAST(depdays AS nvarchar(50)), '9999999') depdays,
     ISNULL(CAST(intdays AS nvarchar(50)), '9999999') intdays,
     ISNULL(CAST(orgsup AS nvarchar(50)), '9999999') orgsup
     FROM {sc}.hes_acp
     JOIN {sc}._chunks ch ON ch.ChunkId = {0} AND patid = ch.PERSON_ID
     WHERE acpstar IS NOT NULL
     ),
     acp_unp as
     (
     SELECT patid, spno, acpstar, 'acpdisp' as fieldname, acpdisp as var_code from hesacp union
     SELECT patid, spno, acpstar, 'acpdur' as fieldname , acpdur as var_code from hesacp union
     SELECT patid, spno, acpstar, 'acploc' as fieldname , acploc as var_code from hesacp union
     SELECT patid, spno, acpstar, 'acpout' as fieldname , acpout as var_code from hesacp union
     SELECT patid, spno, acpstar, 'acpplan' as fieldname, acpplan as var_code from hesacp union
     SELECT patid, spno, acpstar, 'acpsour' as fieldname, acpsour as var_code from hesacp union
     SELECT patid, spno, acpstar, 'acpspef' as fieldname, acpspef as var_code from hesacp union
     SELECT patid, spno, acpstar, 'depdays' as fieldname, depdays as var_code from hesacp union
     SELECT patid, spno, acpstar, 'intdays' as fieldname, intdays as var_code from hesacp union
     SELECT patid, spno, acpstar, 'orgsup' as fieldname , orgsup as var_code from hesacp
     )

     select  patid,
     spno,
     acpstar,
     l.observation_source_value,
     900000007 as observation_type_concept_id,
     CASE
     WHEN description IS NOT NULL THEN description
     WHEN description IS NULL AND
     var_code IS NOT NULL THEN var_code
     ELSE NULL
     END AS value_as_string
     from acp_unp
     JOIN acpLookup l ON l.id = acp_unp.fieldname
     LEFT JOIN nullFields n ON l.fieldname = n.fieldname
     LEFT JOIN mappings m ON l.fieldid = m.fieldid AND ((var_code = '9999999'  AND m.value = 'null')  OR (var_code = m.value))
     WHERE var_code != '' AND (var_code != '9999999' OR (isNullField = 1 AND var_code = '9999999'))
     order by patid
   </Query>
  <Measurement>
    <MeasurementDefinition>
      <PersonId>patid</PersonId>
      <StartDate>acpstar</StartDate>
      <VisitOccurrenceId>spno</VisitOccurrenceId>
      <ValueSourceValue>value_as_string</ValueSourceValue>
      <AdditionalFields>
        <string>value_as_string</string>
      </AdditionalFields>
      <Concepts>
        <Concept>
          <IdRequired>true</IdRequired>
          <ConceptIdMappers>
            <Mapper>
              <Lookup>CPRDV5\Lookups\MeasurementLOINC.sql</Lookup>
            </Mapper>
          </ConceptIdMappers>
          <Fields>
            <Field key="observation_source_value" typeId="observation_type_concept_id"/>
          </Fields>
        </Concept>
      </Concepts>
    </MeasurementDefinition>
  </Measurement>
  <Observation>
    <ObservationDefinition>
      <PersonId>patid</PersonId>
      <StartDate>acpstar</StartDate>
      <VisitOccurrenceId>spno</VisitOccurrenceId>
      <ValuesAsString>
        <string>value_as_string</string>
      </ValuesAsString>
      <AdditionalFields>
        <string>value_as_string</string>
      </AdditionalFields>
      <Concepts>
        <Concept>
          <!--<IdRequired>true</IdRequired>-->
          <ConceptIdMappers>
            <Mapper>
              <Lookup>CPRDV5\Lookups\HES_Observation.sql</Lookup>
            </Mapper>
          </ConceptIdMappers>
          <Fields>
            <Field key="observation_source_value" typeId="observation_type_concept_id" isNullable="true"/>
          </Fields>
        </Concept>
      </Concepts>
    </ObservationDefinition>
  </Observation>
</QueryDefinition>