<QueryDefinition>
   <Query>
     with Additional_upd as
     (
     SELECT [patid]
     ,[enttype]
     ,[adid]
     ,case when ABS(data1_value) - FLOOR(ABS(data1_value)) = 0
     then cast(FLOOR(data1_value) as varchar)
     else cast(data1_value as varchar) end  as data1,
     case when ABS(data2_value) - FLOOR(ABS(data2_value)) = 0
     then cast(FLOOR(data2_value) as varchar)
     else cast(data2_value as varchar) end  as data2
     ,case when ABS(data3_value) - FLOOR(ABS(data3_value)) = 0
     then cast(FLOOR(data3_value) as varchar)
     else cast(data3_value as varchar) end  as data3
     ,cast(data4_value as varchar) as data4
     ,cast(data5_value as varchar) as data5
     ,cast(data6_value as varchar) as data6
     ,cast(data7_value as varchar) as data7
     ,data1_date, data2_date, data3_date, data4_date, data5_date, data6_date, data7_date
     FROM {sc}.[Additional]
     JOIN {sc}._chunks ch ON ch.ChunkId = {0} AND patid = ch.PERSON_ID
     )
     ,a as
     (
     select
     a.patid,
     a.adid,
     cast(a.enttype as varchar) +'-' + '1'  as observation_source_value,
     case
     when a.data1_date is not null then cast(a.data1_date as varchar)
     when l1.code is null and data1lkup is null then a.data1
     when data1lkup = 'Medical Dictionary' then m.description
     when data1lkup = 'Product Dictionary' then p.productname
     else l1.text end as value_as_string,
     case when data2lkup = 'SUM' then a.data2
     else null end as sm_units
     ,[enttype]
     from Additional_upd a
     JOIN {sc}.Entity e on a.enttype = e.code and e.data_fields &gt;= 1
     LEFT JOIN {sc}.lookuptype lt1 on e.data1lkup = lt1.name
     LEFT JOIN {sc}.[Lookup] l1 on a.data1 = cast(l1.code as varchar) and lt1.lookup_type_id  = l1.lookup_type_id
     LEFT JOIN {sc}.Medical m on a.data1 = cast(m.medcode as varchar)
     LEFT JOIN {sc}.Product p on a.data1 = cast(p.prodcode as varchar)
     where (a.data1 is not null or a.data1_date is not null) and enttype != 372


     union all
     select
     a.patid,
     a.adid,
     cast(a.enttype as varchar) + '-' + '2' as observation_source_value,
     case
     when a.data2_date is not null then cast(a.data2_date as varchar)
     when l1.code is null and data2lkup is null then a.data2
     when data2lkup='Medical Dictionary' then m.description
     when data2lkup='Product Dictionary' then p.productname
     else l1.text
     end as value_as_string,
     case when data3lkup = 'SUM' then a.data3
     else null
     end as sm_units
     ,[enttype]
     FROM Additional_upd a
     JOIN {sc}.entity e on a.enttype = e.code and e.data_fields &gt;= 2
     LEFT JOIN {sc}.lookuptype lt1 on e.data2lkup = lt1.name
     LEFT JOIN {sc}.[Lookup] l1 on a.data2 = cast(l1.code as varchar) and lt1.lookup_type_id  = l1.lookup_type_id
     LEFT JOIN {sc}.Medical m on a.data2 = cast(m.medcode as varchar)
     LEFT JOIN {sc}.Product p on a.data2 = cast(p.prodcode as varchar)
     where (a.data2 is not null or a.data2_date is not null) and enttype != 372 and (data2lkup is null or (data2lkup is not null and data2lkup != 'SUM'))

     union all
     select
     a.patid,
     a.adid,
     cast(a.enttype as varchar) + '-' + '3' as observation_source_value,
     case
     when a.data3_date is not null then cast(a.data3_date as varchar)
     when l1.code is null and data3lkup is null then a.data3
     when data3lkup = 'Medical Dictionary' then m.description
     when data3lkup = 'Product Dictionary' then p.productname
     else l1.text end as value_as_string,
     case
     when data4lkup = 'SUM' then a.data4
     else null end as sm_units
     ,[enttype]
     from Additional_upd a
     JOIN {sc}.Entity e on a.enttype = e.code and e.data_fields &gt;= 3
     LEFT JOIN {sc}.lookuptype lt1 on e.data3lkup = lt1.name
     LEFT JOIN {sc}.[Lookup] l1 on a.data3 = cast(l1.code as varchar) and lt1.lookup_type_id  = l1.lookup_type_id
     LEFT JOIN {sc}.Medical m on a.data3 = cast(m.medcode as varchar)
     LEFT JOIN {sc}.Product p on a.data3 = cast(p.prodcode as varchar)
     where (a.data3 is not null or a.data3_date is not null) and enttype != 372 and (data3lkup is null or (data3lkup is not null and data3lkup != 'SUM'))

     union all
     select
     a.patid,
     a.adid,
     cast(a.enttype as varchar) + '-' + '4'  as observation_source_value,
     case
     when a.data4_date is not null then cast(a.data4_date as varchar)
     when l1.code is null and data4lkup is null then a.data4
     when data4lkup = 'Medical Dictionary' then m.description
     when data4lkup = 'Product Dictionary' then p.productname
     else l1.text end as value_as_string,
     case
     when data5lkup = 'SUM' then a.data5
     else null end as sm_units
     ,[enttype]
     from Additional_upd a
     JOIN {sc}.Entity e on a.enttype = e.code and e.data_fields &gt;= 4
     LEFT JOIN {sc}.lookuptype lt1 on e.data4lkup = lt1.name
     LEFT JOIN {sc}.[Lookup] l1 on a.data4 = cast(l1.code as varchar) and lt1.lookup_type_id  = l1.lookup_type_id
     LEFT JOIN {sc}.Medical m on a.data4 = cast(m.medcode as varchar)
     LEFT JOIN {sc}.Product p on a.data4 = cast(p.prodcode as varchar)
     where (a.data4 is not null or a.data4_date is not null) and enttype != 372 and (data4lkup is null or (data4lkup is not null and data4lkup != 'SUM'))

     union all
     select
     a.patid,
     a.adid,
     cast(a.enttype as varchar) + '-' + '5'  as observation_source_value,
     case
     when a.data5_date is not null then cast(a.data5_date as varchar)
     when l1.code is null and data5lkup is null then a.data5
     when data5lkup = 'Medical Dictionary' then m.description
     when data5lkup = 'Product Dictionary' then p.productname
     else l1.text end as value_as_string,
     case
     when data6lkup = 'SUM' then a.data6
     else null end as sm_units
     ,[enttype]
     from Additional_upd a
     JOIN {sc}.Entity e on a.enttype = e.code and e.data_fields &gt;= 5
     LEFT JOIN {sc}.lookuptype lt1 on e.data5lkup = lt1.name
     LEFT JOIN {sc}.[Lookup] l1 on a.data5 = cast(l1.code as varchar) and lt1.lookup_type_id  = l1.lookup_type_id
     LEFT JOIN {sc}.Medical m on a.data5 = cast(m.medcode as varchar)
     LEFT JOIN {sc}.Product p on a.data5 = cast(p.prodcode as varchar)
     where (a.data5 is not null or a.data5_date is not null) and enttype != 372 and (data5lkup is null or (data5lkup is not null and data5lkup != 'SUM'))

     union all
     select
     a.patid,
     a.adid,
     cast(a.enttype as varchar) + '-' + '6'  as observation_source_value,
     case
     when a.data6_date is not null then cast(a.data6_date as varchar)
     when l1.code is null and data6lkup is null then a.data6
     when data6lkup = 'Medical Dictionary' then m.description
     when data6lkup = 'Product Dictionary' then p.productname
     else l1.text end as value_as_string,
     case
     when data7lkup = 'SUM' then a.data7
     else null end as sm_units
     ,[enttype]
     from Additional_upd a
     JOIN {sc}.Entity e on a.enttype = e.code and e.data_fields &gt;= 6
     LEFT JOIN {sc}.lookuptype lt1 on e.data6lkup = lt1.name
     LEFT JOIN {sc}.[Lookup] l1 on a.data6 = cast(l1.code as varchar) and lt1.lookup_type_id  = l1.lookup_type_id
     LEFT JOIN {sc}.Medical m on a.data6 = cast(m.medcode as varchar)
     LEFT JOIN {sc}.Product p on a.data6 = cast(p.prodcode as varchar)
     where (a.data6 is not null or a.data6_date is not null) and enttype != 372 and (data6lkup is null or (data6lkup is not null and data6lkup != 'SUM'))

     union all
     select
     a.patid,
     a.adid,
     cast(a.enttype as varchar) + '-' + '7'  as observation_source_value,
     case
     when a.data7_date is not null then cast(a.data7_date as varchar)
     when l1.code is null and data7lkup is null then a.data7
     when data7lkup = 'Medical Dictionary' then m.description
     when data7lkup = 'Product Dictionary' then p.productname
     else l1.text end as value_as_string,
     null as sm_units
     ,[enttype]
     from Additional_upd a
     JOIN {sc}.Entity e on a.enttype = e.code and e.data_fields &gt;= 7
     LEFT JOIN {sc}.lookuptype lt1 on e.data7lkup = lt1.name
     LEFT JOIN {sc}.[Lookup] l1 on a.data7 = cast(l1.code as varchar) and lt1.lookup_type_id  = l1.lookup_type_id
     LEFT JOIN {sc}.Medical m on a.data7 = cast(m.medcode as varchar)
     LEFT JOIN {sc}.Product p on a.data7 = cast(p.prodcode as varchar)
     where (a.data7 is not null or a.data7_date is not null) and enttype != 372 and (data7lkup is null or (data7lkup is not null and data7lkup != 'SUM'))


     union all
     select
     a.patid,
     a.adid,
     '372-' + a.data3 + '-' +  a.data2  as  observation_source_value,
     a.data1 as value_as_string,
     null as sm_units
     ,[enttype]
     from Additional_upd a
     where a.data1 is not null and a.enttype = 372

     )

     SELECT distinct
     a.patid,
     a.observation_source_value,
     a.value_as_string,
     case when ISNUMERIC(a.value_as_string) = 1 then cast(a.value_as_string as float) else null end as value_as_number,
     b.eventdate,
     b.staffid,
     (a.patid*100000000)+(year(b.eventdate)*10000)+(month(b.eventdate)*100)+day(b.eventdate) as visit_occurrence_id,
     case when value_as_string =  'Not examined'  then 4301433
     when value_as_string ='Potential Abnormal' then 40567538
     when value_as_string =  'Present' then 4181412
     when value_as_string=  'Unknown' then 4129922
     when value_as_string=  'Normal' then 4069590
     when value_as_string=  'Absent' then 4132135
     when value_as_string=  'Abnormal' then 4135493 end as value_as_concept_id,
     c.text as units_source_value,
     a.sm_units,
     a.[enttype],
     case when a.[enttype] = 372 then 1 else 0 end as is372
     FROM a
     JOIN {sc}.Clinical b on a.adid = b.adid and RIGHT(a.patid,3) = RIGHT(b.patid,3)
     LEFT JOIN {sc}.[Lookup] c on c.lookup_type_id = (SELECT [lookup_type_id] FROM [LookupType] WHERE name = 'SUM') and a.sm_units = c.code
     where b.eventdate is not null and a.value_as_string != 'Data Not Entered' and a.value_as_string is not null
     and a.value_as_string != ' '

   </Query>

  <Measurement>
    <MeasurementDefinition>
      <PersonId>patid</PersonId>
      <VisitOccurrenceId>visit_occurrence_id</VisitOccurrenceId>
      <StartDate>eventdate</StartDate>
      <ProviderId>staffid</ProviderId>
      <ValueSourceValue>value_as_string</ValueSourceValue>
      <ValueAsNumber>value_as_number</ValueAsNumber>
      <ValueAsConceptId>value_as_concept_id</ValueAsConceptId>
      <Concepts>
        <Concept>
          <IdRequired>true</IdRequired>
          <ConceptIdMappers>
            <Mapper>
              <Lookup>CPRDV5\Lookups\Measurement_Additional.sql</Lookup>
            </Mapper>
          </ConceptIdMappers>
          <Fields>
            <Field key="observation_source_value" defaultTypeId="44818701"/>
          </Fields>
        </Concept>
        <Concept>
          <ConceptIdMappers>
            <Mapper>
              <Lookup>CPRDV5\Lookups\Measurement_Units.sql</Lookup>
            </Mapper>
          </ConceptIdMappers>
          <Fields>
            <Field key="units_source_value" defaultTypeId="0"/>
          </Fields>
        </Concept>
      </Concepts>
    </MeasurementDefinition>

    <MeasurementDefinition>
      <PersonId>patid</PersonId>
      <VisitOccurrenceId>visit_occurrence_id</VisitOccurrenceId>
      <StartDate>eventdate</StartDate>
      <ProviderId>staffid</ProviderId>
      <ValueAsNumber>value_as_number</ValueAsNumber>
      <ValueSourceValue>value_as_string</ValueSourceValue>
      <Concepts>
        <Concept>
          <IdRequired>true</IdRequired>
          <ConceptIdMappers>
            <Mapper>
              <Lookup>CPRDV5\Lookups\Measurement_Additional_372.sql</Lookup>
            </Mapper>
          </ConceptIdMappers>
          <Fields>
            <Field key="observation_source_value" defaultTypeId="44818704"/>
          </Fields>
        </Concept>
      </Concepts>
    </MeasurementDefinition>
  </Measurement>

  <Observation>
     <ObservationDefinition>
		 <Condition>{is372} = 0</Condition>
         <PersonId>patid</PersonId>
         <StartDate>eventdate</StartDate>
         <ProviderId>staffid</ProviderId>
         <VisitOccurrenceId>visit_occurrence_id</VisitOccurrenceId>
         <ValuesAsString>
            <string>value_as_string</string>
         </ValuesAsString>
         <ValuesAsNumber>
           <string>value_as_number</string>
         </ValuesAsNumber>
         <ValueAsConceptId>value_as_concept_id</ValueAsConceptId>
         <Concepts>
            <Concept>
               <!--<IdRequired>true</IdRequired>-->
               <ConceptIdMappers>
                  <Mapper>
                     <Lookup>CPRDV5\Lookups\Observation_Additional.sql</Lookup>
                  </Mapper>
               </ConceptIdMappers>
               <Fields>
                  <Field key="observation_source_value" defaultTypeId="38000280"/>
               </Fields>
            </Concept>
            <Concept>
               <ConceptIdMappers>
                  <Mapper>
                     <Lookup>CPRDV5\Lookups\Measurement_Units.sql</Lookup>
                  </Mapper>
               </ConceptIdMappers>
               <Fields>
                  <Field key="units_source_value" defaultTypeId="0"/>
               </Fields>
            </Concept>
         </Concepts>
      </ObservationDefinition>

     <ObservationDefinition>
       <Condition>{is372} = 1</Condition>
       <PersonId>patid</PersonId>
       <StartDate>eventdate</StartDate>
       <ProviderId>staffid</ProviderId>
       <VisitOccurrenceId>visit_occurrence_id</VisitOccurrenceId>
       <ValuesAsNumber>
         <string>value_as_number</string>
       </ValuesAsNumber>
       <Concepts>
         <Concept>
           <ConceptIdMappers>
             <Mapper>
               <Lookup>CPRDV5\Lookups\Observation_Additional_372.sql</Lookup>
             </Mapper>
           </ConceptIdMappers>
           <Fields>
             <Field key="observation_source_value" defaultTypeId="44814721" isNullable="true"/>
           </Fields>
         </Concept>
       </Concepts>
     </ObservationDefinition>
   </Observation>
</QueryDefinition>