} else {
statement <- paste0(statement, ' AND')
}
if (is.null(source_release_date)) {
statement <- paste0(statement, ' source_release_date IS NULL')
} else if (is(source_release_date, 'subQuery')){
statement <- paste0(statement, ' source_release_date = (', as.character(source_release_date), ')')
} else {
statement <- paste0(statement, " source_release_date = '", source_release_date,"'")
}
}
if (!missing(cdm_release_date)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cdm_release_date)) {
statement <- paste0(statement, ' cdm_release_date IS NULL')
} else if (is(cdm_release_date, 'subQuery')){
statement <- paste0(statement, ' cdm_release_date = (', as.character(cdm_release_date), ')')
} else {
statement <- paste0(statement, " cdm_release_date = '", cdm_release_date,"'")
}
}
if (!missing(cdm_version)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cdm_version)) {
statement <- paste0(statement, ' cdm_version IS NULL')
} else if (is(cdm_version, 'subQuery')){
statement <- paste0(statement, ' cdm_version = (', as.character(cdm_version), ')')
} else {
statement <- paste0(statement, " cdm_version = '", cdm_version,"'")
}
}
if (!missing(vocabulary_version)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(vocabulary_version)) {
statement <- paste0(statement, ' vocabulary_version IS NULL')
} else if (is(vocabulary_version, 'subQuery')){
statement <- paste0(statement, ' vocabulary_version = (', as.character(vocabulary_version), ')')
} else {
statement <- paste0(statement, " vocabulary_version = '", vocabulary_version,"'")
}
}
class(statement) <- 'subQuery'
return(statement)
}
lookup_cohort <- function(fetchField, cohort_definition_id, subject_id, cohort_start_date, cohort_end_date) {
statement <- paste0('SELECT ', fetchField , ' FROM cohort WHERE')
first <- TRUE
if (!missing(cohort_definition_id)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cohort_definition_id)) {
statement <- paste0(statement, ' cohort_definition_id IS NULL')
} else if (is(cohort_definition_id, 'subQuery')){
statement <- paste0(statement, ' cohort_definition_id = (', as.character(cohort_definition_id), ')')
} else {
statement <- paste0(statement, " cohort_definition_id = '", cohort_definition_id,"'")
}
}
if (!missing(subject_id)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(subject_id)) {
statement <- paste0(statement, ' subject_id IS NULL')
} else if (is(subject_id, 'subQuery')){
statement <- paste0(statement, ' subject_id = (', as.character(subject_id), ')')
} else {
statement <- paste0(statement, " subject_id = '", subject_id,"'")
}
}
if (!missing(cohort_start_date)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cohort_start_date)) {
statement <- paste0(statement, ' cohort_start_date IS NULL')
} else if (is(cohort_start_date, 'subQuery')){
statement <- paste0(statement, ' cohort_start_date = (', as.character(cohort_start_date), ')')
} else {
statement <- paste0(statement, " cohort_start_date = '", cohort_start_date,"'")
}
}
if (!missing(cohort_end_date)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cohort_end_date)) {
statement <- paste0(statement, ' cohort_end_date IS NULL')
} else if (is(cohort_end_date, 'subQuery')){
statement <- paste0(statement, ' cohort_end_date = (', as.character(cohort_end_date), ')')
} else {
statement <- paste0(statement, " cohort_end_date = '", cohort_end_date,"'")
}
}
class(statement) <- 'subQuery'
return(statement)
}
lookup_cohort_definition <- function(fetchField, cohort_definition_id, cohort_definition_name, cohort_definition_description, definition_type_concept_id, cohort_definition_syntax, subject_concept_id, cohort_instantiation_date) {
statement <- paste0('SELECT ', fetchField , ' FROM cohort_definition WHERE')
first <- TRUE
if (!missing(cohort_definition_id)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cohort_definition_id)) {
statement <- paste0(statement, ' cohort_definition_id IS NULL')
} else if (is(cohort_definition_id, 'subQuery')){
statement <- paste0(statement, ' cohort_definition_id = (', as.character(cohort_definition_id), ')')
} else {
statement <- paste0(statement, " cohort_definition_id = '", cohort_definition_id,"'")
}
}
if (!missing(cohort_definition_name)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cohort_definition_name)) {
statement <- paste0(statement, ' cohort_definition_name IS NULL')
} else if (is(cohort_definition_name, 'subQuery')){
statement <- paste0(statement, ' cohort_definition_name = (', as.character(cohort_definition_name), ')')
} else {
statement <- paste0(statement, " cohort_definition_name = '", cohort_definition_name,"'")
}
}
if (!missing(cohort_definition_description)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cohort_definition_description)) {
statement <- paste0(statement, ' cohort_definition_description IS NULL')
} else if (is(cohort_definition_description, 'subQuery')){
statement <- paste0(statement, ' cohort_definition_description = (', as.character(cohort_definition_description), ')')
} else {
statement <- paste0(statement, " cohort_definition_description = '", cohort_definition_description,"'")
}
}
if (!missing(definition_type_concept_id)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(definition_type_concept_id)) {
statement <- paste0(statement, ' definition_type_concept_id IS NULL')
} else if (is(definition_type_concept_id, 'subQuery')){
statement <- paste0(statement, ' definition_type_concept_id = (', as.character(definition_type_concept_id), ')')
} else {
statement <- paste0(statement, " definition_type_concept_id = '", definition_type_concept_id,"'")
}
}
if (!missing(cohort_definition_syntax)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cohort_definition_syntax)) {
statement <- paste0(statement, ' cohort_definition_syntax IS NULL')
} else if (is(cohort_definition_syntax, 'subQuery')){
statement <- paste0(statement, ' cohort_definition_syntax = (', as.character(cohort_definition_syntax), ')')
} else {
statement <- paste0(statement, " cohort_definition_syntax = '", cohort_definition_syntax,"'")
}
}
if (!missing(subject_concept_id)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(subject_concept_id)) {
statement <- paste0(statement, ' subject_concept_id IS NULL')
} else if (is(subject_concept_id, 'subQuery')){
statement <- paste0(statement, ' subject_concept_id = (', as.character(subject_concept_id), ')')
} else {
statement <- paste0(statement, " subject_concept_id = '", subject_concept_id,"'")
}
}
if (!missing(cohort_instantiation_date)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cohort_instantiation_date)) {
statement <- paste0(statement, ' cohort_instantiation_date IS NULL')
} else if (is(cohort_instantiation_date, 'subQuery')){
statement <- paste0(statement, ' cohort_instantiation_date = (', as.character(cohort_instantiation_date), ')')
} else {
statement <- paste0(statement, " cohort_instantiation_date = '", cohort_instantiation_date,"'")
}
}
class(statement) <- 'subQuery'
return(statement)
}
lookup_cohort_attribute <- function(fetchField, cohort_definition_id, cohort_start_date, cohort_end_date, subject_id, attribute_definition_id, value_as_number, value_as_concept_id) {
statement <- paste0('SELECT ', fetchField , ' FROM cohort_attribute WHERE')
first <- TRUE
if (!missing(cohort_definition_id)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cohort_definition_id)) {
statement <- paste0(statement, ' cohort_definition_id IS NULL')
} else if (is(cohort_definition_id, 'subQuery')){
statement <- paste0(statement, ' cohort_definition_id = (', as.character(cohort_definition_id), ')')
} else {
statement <- paste0(statement, " cohort_definition_id = '", cohort_definition_id,"'")
}
}
if (!missing(cohort_start_date)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cohort_start_date)) {
statement <- paste0(statement, ' cohort_start_date IS NULL')
} else if (is(cohort_start_date, 'subQuery')){
statement <- paste0(statement, ' cohort_start_date = (', as.character(cohort_start_date), ')')
} else {
statement <- paste0(statement, " cohort_start_date = '", cohort_start_date,"'")
}
}
if (!missing(cohort_end_date)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(cohort_end_date)) {
statement <- paste0(statement, ' cohort_end_date IS NULL')
} else if (is(cohort_end_date, 'subQuery')){
statement <- paste0(statement, ' cohort_end_date = (', as.character(cohort_end_date), ')')
} else {
statement <- paste0(statement, " cohort_end_date = '", cohort_end_date,"'")
}
}
if (!missing(subject_id)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(subject_id)) {
statement <- paste0(statement, ' subject_id IS NULL')
} else if (is(subject_id, 'subQuery')){
statement <- paste0(statement, ' subject_id = (', as.character(subject_id), ')')
} else {
statement <- paste0(statement, " subject_id = '", subject_id,"'")
}
}
if (!missing(attribute_definition_id)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(attribute_definition_id)) {
statement <- paste0(statement, ' attribute_definition_id IS NULL')
} else if (is(attribute_definition_id, 'subQuery')){
statement <- paste0(statement, ' attribute_definition_id = (', as.character(attribute_definition_id), ')')
} else {
statement <- paste0(statement, " attribute_definition_id = '", attribute_definition_id,"'")
}
}
if (!missing(value_as_number)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(value_as_number)) {
statement <- paste0(statement, ' value_as_number IS NULL')
} else if (is(value_as_number, 'subQuery')){
statement <- paste0(statement, ' value_as_number = (', as.character(value_as_number), ')')
} else {
statement <- paste0(statement, " value_as_number = '", value_as_number,"'")
}
}
if (!missing(value_as_concept_id)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(value_as_concept_id)) {
statement <- paste0(statement, ' value_as_concept_id IS NULL')
} else if (is(value_as_concept_id, 'subQuery')){
statement <- paste0(statement, ' value_as_concept_id = (', as.character(value_as_concept_id), ')')
} else {
statement <- paste0(statement, " value_as_concept_id = '", value_as_concept_id,"'")
}
}
class(statement) <- 'subQuery'
return(statement)
}
lookup_attribute_definition <- function(fetchField, attribute_definition_id, attribute_name, attribute_description, attribute_type_concept_id, attribute_syntax) {
statement <- paste0('SELECT ', fetchField , ' FROM attribute_definition WHERE')
first <- TRUE
if (!missing(attribute_definition_id)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(attribute_definition_id)) {
statement <- paste0(statement, ' attribute_definition_id IS NULL')
} else if (is(attribute_definition_id, 'subQuery')){
statement <- paste0(statement, ' attribute_definition_id = (', as.character(attribute_definition_id), ')')
} else {
statement <- paste0(statement, " attribute_definition_id = '", attribute_definition_id,"'")
}
}
if (!missing(attribute_name)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(attribute_name)) {
statement <- paste0(statement, ' attribute_name IS NULL')
} else if (is(attribute_name, 'subQuery')){
statement <- paste0(statement, ' attribute_name = (', as.character(attribute_name), ')')
} else {
statement <- paste0(statement, " attribute_name = '", attribute_name,"'")
}
}
if (!missing(attribute_description)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(attribute_description)) {
statement <- paste0(statement, ' attribute_description IS NULL')
} else if (is(attribute_description, 'subQuery')){
statement <- paste0(statement, ' attribute_description = (', as.character(attribute_description), ')')
} else {
statement <- paste0(statement, " attribute_description = '", attribute_description,"'")
}
}
if (!missing(attribute_type_concept_id)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(attribute_type_concept_id)) {
statement <- paste0(statement, ' attribute_type_concept_id IS NULL')
} else if (is(attribute_type_concept_id, 'subQuery')){
statement <- paste0(statement, ' attribute_type_concept_id = (', as.character(attribute_type_concept_id), ')')
} else {
statement <- paste0(statement, " attribute_type_concept_id = '", attribute_type_concept_id,"'")
}
}
if (!missing(attribute_syntax)) {
if (first) {
first <- FALSE
} else {
statement <- paste0(statement, ' AND')
}
if (is.null(attribute_syntax)) {
statement <- paste0(statement, ' attribute_syntax IS NULL')
} else if (is(attribute_syntax, 'subQuery')){
statement <- paste0(statement, ' attribute_syntax = (', as.character(attribute_syntax), ')')
} else {
statement <- paste0(statement, " attribute_syntax = '", attribute_syntax,"'")
}
}
class(statement) <- 'subQuery'
return(statement)
}
patient <- createPatient()
createPatient <- function() {
personId = sequencer$nextSequence();
return (list(patid = personId, person_id = personId));
}
createClaim <- function() {
claimId = sequencer$nextSequence();
return (list(clmid = paste0("CLM", claimId)))
}
patient <- createPatient()
claim <- createClaim()
#' Clean native DB
#'
#' @details
#' Removes all test case data (truncates native tables)
#'
#' @return
#' none
#'
#' @export
clean <- function(connectionDetails) {
writeLines("Clean Executed");
}
#' Get insert SQL
#'
#' @details
#' Returns insert Sql for native DB.
#'
#' @return
#' list of sql statements
#'
#' @export
getInsertSql <- function(connectionDetails) {
return(frameworkContext$insertSql);
}
#' Get testing SQL
#'
#' @details
#' Returns testing Sql for the CDM DB.
#'
#' @return
#' list of sql statements
#'
#' @export
getTestSql <- function(connectionDetails) {
return(frameworkContext$testSql);
}
getSequence <- function (startValue = 1) {
counterInstance <- new.env(parent = emptyenv());
counterInstance$currentValue <- startValue;
counterInstance$nextSequence <- function()
{
nextValue <- counterInstance$currentValue;
counterInstance$currentValue = counterInstance$currentValue + 1;
return(nextValue)
}
return (counterInstance);
}
createPatient <- function() {
personId = sequencer$nextSequence();
return (list(patid = personId, person_id = personId));
}
createClaim <- function() {
claimId = sequencer$nextSequence();
return (list(clmid = paste0("CLM", claimId)))
}
createProvider <- function() {
providerId = sequencer$nextSequence();
return (list(provid = providerId, provider_id = providerId));
}
# Use this function to test build errors
# It's challenging to debug errors when a package loads, so disable onLoad
# and export the below when debugging.
#' @export
testInit <- function() {
initFramework();
createTests();
}
sequencer <- getSequence();
.onLoad <- function(libname, pkgname) {
initFramework();
createTests();
}
patient <- createPatient()
claim <- createClaim()
diagTypeConceptIds <- list(c(38000230:38000230), rep(38000230, times = 11))
diagTypeConceptIds
diagTypeConceptIds <- list(c(38000230:38000243), rep(38000244, times = 11))
diagTypeConceptIds
diagTypeConceptIds <- list(list(38000230:38000243), rep(38000244, times = 11))
diagTypeConceptIds
diagTypeConceptIds <- list(c(38000230:38000243), rep(38000244, times = 11))
diag()
diagTypeConceptIds
unlist(diagTypeConceptIds)
a<-unlist(diagTypeConceptIds)
a
b<-unlist(a)
b
a
a[1]
a[25]
a[26]
diagTypeConceptIds <- unlist(list(c(38000230:38000243), rep(38000244, times = 11)))
diagTypeConceptIds
id <- 999
assign('testId', id, envir = globalenv())
get('testId', envir = globalenv())
assign('groupItemIndex', 5, envir = globalenv())
get('groupItemIndex', envir = globalenv()) + 1
